{"ast":null,"code":"var MersenneTwister = require('mersenne-twister');\n\nvar paperGen = require('./paper');\n\nvar Color = require('color');\n\nvar colors = require('./colors');\n\nvar shapeCount = 4;\nvar svgns = 'http://www.w3.org/2000/svg';\nmodule.exports = generateIdenticon;\nvar generator;\n\nfunction generateIdenticon(diameter, seed) {\n  generator = new MersenneTwister(seed);\n  var remainingColors = hueShift(colors.slice(), generator);\n  var elements = paperGen(diameter, genColor(remainingColors));\n  var container = elements.container;\n  var svg = document.createElementNS(svgns, 'svg');\n  svg.setAttributeNS(null, 'x', '0');\n  svg.setAttributeNS(null, 'y', '0');\n  svg.setAttributeNS(null, 'width', diameter);\n  svg.setAttributeNS(null, 'height', diameter);\n  container.appendChild(svg);\n\n  for (var i = 0; i < shapeCount - 1; i++) {\n    genShape(remainingColors, diameter, i, shapeCount - 1, svg);\n  }\n\n  return container;\n}\n\nfunction genShape(remainingColors, diameter, i, total, svg) {\n  var center = diameter / 2;\n  var shape = document.createElementNS(svgns, 'rect');\n  shape.setAttributeNS(null, 'x', '0');\n  shape.setAttributeNS(null, 'y', '0');\n  shape.setAttributeNS(null, 'width', diameter);\n  shape.setAttributeNS(null, 'height', diameter);\n  var firstRot = generator.random();\n  var angle = Math.PI * 2 * firstRot;\n  var velocity = diameter / total * generator.random() + i * diameter / total;\n  var tx = Math.cos(angle) * velocity;\n  var ty = Math.sin(angle) * velocity;\n  var translate = 'translate(' + tx + ' ' + ty + ')'; // Third random is a shape rotation on top of all of that.\n\n  var secondRot = generator.random();\n  var rot = firstRot * 360 + secondRot * 180;\n  var rotate = 'rotate(' + rot.toFixed(1) + ' ' + center + ' ' + center + ')';\n  var transform = translate + ' ' + rotate;\n  shape.setAttributeNS(null, 'transform', transform);\n  var fill = genColor(remainingColors);\n  shape.setAttributeNS(null, 'fill', fill);\n  svg.appendChild(shape);\n}\n\nfunction genColor(colors) {\n  var rand = generator.random();\n  var idx = Math.floor(colors.length * generator.random());\n  var color = colors.splice(idx, 1)[0];\n  return color;\n}\n\nvar wobble = 30;\n\nfunction hueShift(colors, generator) {\n  var amount = generator.random() * 30 - wobble / 2;\n  return colors.map(function (hex) {\n    var color = Color(hex);\n    color.rotate(amount);\n    return color.hexString();\n  });\n}","map":{"version":3,"sources":["/home/mark/Desktop/Challenges/Blockchain/Owner/react-site/node_modules/@metamask/jazzicon/index.js"],"names":["MersenneTwister","require","paperGen","Color","colors","shapeCount","svgns","module","exports","generateIdenticon","generator","diameter","seed","remainingColors","hueShift","slice","elements","genColor","container","svg","document","createElementNS","setAttributeNS","appendChild","i","genShape","total","center","shape","firstRot","random","angle","Math","PI","velocity","tx","cos","ty","sin","translate","secondRot","rot","rotate","toFixed","transform","fill","rand","idx","floor","length","color","splice","wobble","amount","map","hex","hexString"],"mappings":"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","sourcesContent":["var MersenneTwister = require('mersenne-twister');\nvar paperGen = require('./paper')\nvar Color = require('color')\nvar colors = require('./colors')\nvar shapeCount = 4\nvar svgns = 'http://www.w3.org/2000/svg'\n\nmodule.exports = generateIdenticon\n\nvar generator\nfunction generateIdenticon(diameter, seed) {\n  generator = new MersenneTwister(seed);\n  var remainingColors = hueShift(colors.slice(), generator)\n\n  var elements = paperGen(diameter, genColor(remainingColors))\n  var container = elements.container\n\n  var svg = document.createElementNS(svgns, 'svg')\n  svg.setAttributeNS(null, 'x', '0')\n  svg.setAttributeNS(null, 'y', '0')\n  svg.setAttributeNS(null, 'width', diameter)\n  svg.setAttributeNS(null, 'height', diameter)\n\n  container.appendChild(svg)\n\n  for(var i = 0; i < shapeCount - 1; i++) {\n    genShape(remainingColors, diameter, i, shapeCount - 1, svg)\n  }\n\n  return container\n}\n\nfunction genShape(remainingColors, diameter, i, total, svg) {\n  var center = diameter / 2\n\n  var shape = document.createElementNS(svgns, 'rect')\n  shape.setAttributeNS(null, 'x', '0')\n  shape.setAttributeNS(null, 'y', '0')\n  shape.setAttributeNS(null, 'width', diameter)\n  shape.setAttributeNS(null, 'height', diameter)\n\n  var firstRot = generator.random()\n  var angle = Math.PI * 2 * firstRot\n  var velocity = diameter / total * generator.random() + (i * diameter / total)\n\n  var tx = (Math.cos(angle) * velocity)\n  var ty = (Math.sin(angle) * velocity)\n\n  var translate = 'translate(' + tx + ' ' +  ty + ')'\n\n  // Third random is a shape rotation on top of all of that.\n  var secondRot = generator.random()\n  var rot = (firstRot * 360) + secondRot * 180\n  var rotate = 'rotate(' + rot.toFixed(1) + ' ' + center + ' ' + center + ')'\n  var transform = translate + ' ' + rotate\n  shape.setAttributeNS(null, 'transform', transform)\n  var fill = genColor(remainingColors)\n  shape.setAttributeNS(null, 'fill', fill)\n\n  svg.appendChild(shape)\n}\n\nfunction genColor(colors) {\n  var rand = generator.random()\n  var idx = Math.floor(colors.length * generator.random())\n  var color = colors.splice(idx,1)[0]\n  return color\n}\n\nvar wobble = 30\nfunction hueShift(colors, generator) {\n  var amount = (generator.random() * 30) - (wobble / 2)\n  return colors.map(function(hex) {\n    var color = Color(hex)\n    color.rotate(amount)\n    return color.hexString()\n  })\n}\n"]},"metadata":{},"sourceType":"script"}