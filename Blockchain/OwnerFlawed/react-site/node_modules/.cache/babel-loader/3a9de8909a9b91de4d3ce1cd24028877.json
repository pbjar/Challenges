{"ast":null,"code":"import { pipe } from \"@chakra-ui/utils\";\nimport { mergeThemeOverride } from \"../extend-theme\";\nimport { withDefaultColorScheme } from \"./with-default-color-scheme\";\nimport { withDefaultVariant } from \"./with-default-variant\";\nimport { withDefaultSize } from \"./with-default-size\";\nexport function withDefaultProps(_ref) {\n  var {\n    defaultProps: {\n      colorScheme,\n      variant,\n      size\n    },\n    components\n  } = _ref;\n\n  var identity = t => t;\n\n  var fns = [colorScheme ? withDefaultColorScheme({\n    colorScheme,\n    components\n  }) : identity, size ? withDefaultSize({\n    size,\n    components\n  }) : identity, variant ? withDefaultVariant({\n    variant,\n    components\n  }) : identity];\n  return theme => mergeThemeOverride(pipe(...fns)(theme));\n}","map":{"version":3,"sources":["../../../src/theme-extensions/with-default-props.ts"],"names":["defaultProps","size","components","identity","t","fns","colorScheme","withDefaultColorScheme","withDefaultSize","variant","withDefaultVariant","theme","mergeThemeOverride","pipe"],"mappings":"AACA,SAAA,IAAA,QAAA,kBAAA;AACA,SAAA,kBAAA,QAAA,iBAAA;AACA,SAAA,sBAAA,QAAA,6BAAA;AACA,SAAA,kBAAA,QAAA,wBAAA;AACA,SAAA,eAAA,QAAA,qBAAA;AAEA,OAAO,SAAA,gBAAA,CAAA,IAAA,EASJ;AAAA,MAND;AACAA,IAAAA,YAAY,EAAE;AAAA,MAAA,WAAA;AAAA,MAAA,OAAA;AAAwBC,MAAAA;AAAxB,KADd;AAEAC,IAAAA;AAFA,MAMC,IAAA;;AACD,MAAMC,QAAQ,GAAOC,CAAJ,IAAjB,CAAA;;AACA,MAAMC,GAAG,GAAG,CACVC,WAAW,GACPC,sBAAsB,CAAC;AAAA,IAAA,WAAA;AAAeL,IAAAA;AAAf,GAAD,CADf,GADD,QAAA,EAIVD,IAAI,GAAGO,eAAe,CAAC;AAAA,IAAA,IAAA;AAAQN,IAAAA;AAAR,GAAD,CAAlB,GAJM,QAAA,EAKVO,OAAO,GAAGC,kBAAkB,CAAC;AAAA,IAAA,OAAA;AAAWR,IAAAA;AAAX,GAAD,CAArB,GALT,QAAY,CAAZ;AAQA,SAAQS,KAAD,IAAqBC,kBAAkB,CAAYC,IAAI,CAAC,GAALA,GAAI,CAAJA,CAA1D,KAA0DA,CAAZ,CAA9C;AACD","sourcesContent":["import { ChakraTheme, ComponentDefaultProps } from \"@chakra-ui/theme\"\nimport { Dict, pipe } from \"@chakra-ui/utils\"\nimport { mergeThemeOverride, ThemeOverride } from \"../extend-theme\"\nimport { withDefaultColorScheme } from \"./with-default-color-scheme\"\nimport { withDefaultVariant } from \"./with-default-variant\"\nimport { withDefaultSize } from \"./with-default-size\"\n\nexport function withDefaultProps<\n  BaseTheme extends ChakraTheme,\n  Override extends ThemeOverride<BaseTheme>\n>({\n  defaultProps: { colorScheme, variant, size },\n  components,\n}: {\n  defaultProps: ComponentDefaultProps\n  components?: string[] | Dict\n}) {\n  const identity = <T>(t: T) => t\n  const fns = [\n    colorScheme\n      ? withDefaultColorScheme({ colorScheme, components })\n      : identity,\n    size ? withDefaultSize({ size, components }) : identity,\n    variant ? withDefaultVariant({ variant, components }) : identity,\n  ]\n\n  return (theme: Override) => mergeThemeOverride<BaseTheme>(pipe(...fns)(theme))\n}\n"]},"metadata":{},"sourceType":"module"}