{"ast":null,"code":"import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { parseMutationFilterArgs } from '../core/utils';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useIsMutating(arg1, arg2) {\n  var mountedRef = React.useRef(false);\n  var filters = parseMutationFilterArgs(arg1, arg2);\n  var queryClient = useQueryClient();\n\n  var _React$useState = React.useState(queryClient.isMutating(filters)),\n      isMutating = _React$useState[0],\n      setIsMutating = _React$useState[1];\n\n  var filtersRef = React.useRef(filters);\n  filtersRef.current = filters;\n  var isMutatingRef = React.useRef(isMutating);\n  isMutatingRef.current = isMutating;\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = queryClient.getMutationCache().subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        var newIsMutating = queryClient.isMutating(filtersRef.current);\n\n        if (isMutatingRef.current !== newIsMutating) {\n          setIsMutating(newIsMutating);\n        }\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [queryClient]);\n  return isMutating;\n}","map":{"version":3,"sources":["/home/mark/Desktop/Challenges/Blockchain/Owner2/react-site/node_modules/react-query/es/react/useIsMutating.js"],"names":["React","notifyManager","parseMutationFilterArgs","useQueryClient","useIsMutating","arg1","arg2","mountedRef","useRef","filters","queryClient","_React$useState","useState","isMutating","setIsMutating","filtersRef","current","isMutatingRef","useEffect","unsubscribe","getMutationCache","subscribe","batchCalls","newIsMutating"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,uBAAT,QAAwC,eAAxC;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,IAA7B,EAAmC;AACxC,MAAIC,UAAU,GAAGP,KAAK,CAACQ,MAAN,CAAa,KAAb,CAAjB;AACA,MAAIC,OAAO,GAAGP,uBAAuB,CAACG,IAAD,EAAOC,IAAP,CAArC;AACA,MAAII,WAAW,GAAGP,cAAc,EAAhC;;AAEA,MAAIQ,eAAe,GAAGX,KAAK,CAACY,QAAN,CAAeF,WAAW,CAACG,UAAZ,CAAuBJ,OAAvB,CAAf,CAAtB;AAAA,MACII,UAAU,GAAGF,eAAe,CAAC,CAAD,CADhC;AAAA,MAEIG,aAAa,GAAGH,eAAe,CAAC,CAAD,CAFnC;;AAIA,MAAII,UAAU,GAAGf,KAAK,CAACQ,MAAN,CAAaC,OAAb,CAAjB;AACAM,EAAAA,UAAU,CAACC,OAAX,GAAqBP,OAArB;AACA,MAAIQ,aAAa,GAAGjB,KAAK,CAACQ,MAAN,CAAaK,UAAb,CAApB;AACAI,EAAAA,aAAa,CAACD,OAAd,GAAwBH,UAAxB;AACAb,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAY;AAC1BX,IAAAA,UAAU,CAACS,OAAX,GAAqB,IAArB;AACA,QAAIG,WAAW,GAAGT,WAAW,CAACU,gBAAZ,GAA+BC,SAA/B,CAAyCpB,aAAa,CAACqB,UAAd,CAAyB,YAAY;AAC9F,UAAIf,UAAU,CAACS,OAAf,EAAwB;AACtB,YAAIO,aAAa,GAAGb,WAAW,CAACG,UAAZ,CAAuBE,UAAU,CAACC,OAAlC,CAApB;;AAEA,YAAIC,aAAa,CAACD,OAAd,KAA0BO,aAA9B,EAA6C;AAC3CT,UAAAA,aAAa,CAACS,aAAD,CAAb;AACD;AACF;AACF,KAR0D,CAAzC,CAAlB;AASA,WAAO,YAAY;AACjBhB,MAAAA,UAAU,CAACS,OAAX,GAAqB,KAArB;AACAG,MAAAA,WAAW;AACZ,KAHD;AAID,GAfD,EAeG,CAACT,WAAD,CAfH;AAgBA,SAAOG,UAAP;AACD","sourcesContent":["import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { parseMutationFilterArgs } from '../core/utils';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useIsMutating(arg1, arg2) {\n  var mountedRef = React.useRef(false);\n  var filters = parseMutationFilterArgs(arg1, arg2);\n  var queryClient = useQueryClient();\n\n  var _React$useState = React.useState(queryClient.isMutating(filters)),\n      isMutating = _React$useState[0],\n      setIsMutating = _React$useState[1];\n\n  var filtersRef = React.useRef(filters);\n  filtersRef.current = filters;\n  var isMutatingRef = React.useRef(isMutating);\n  isMutatingRef.current = isMutating;\n  React.useEffect(function () {\n    mountedRef.current = true;\n    var unsubscribe = queryClient.getMutationCache().subscribe(notifyManager.batchCalls(function () {\n      if (mountedRef.current) {\n        var newIsMutating = queryClient.isMutating(filtersRef.current);\n\n        if (isMutatingRef.current !== newIsMutating) {\n          setIsMutating(newIsMutating);\n        }\n      }\n    }));\n    return function () {\n      mountedRef.current = false;\n      unsubscribe();\n    };\n  }, [queryClient]);\n  return isMutating;\n}"]},"metadata":{},"sourceType":"module"}