{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef, omitThemingProps, StylesProvider, useMultiStyleConfig, useStyles } from \"@chakra-ui/system\";\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nexport var TableContainer = /*#__PURE__*/forwardRef((props, ref) => {\n  var _ref;\n\n  var {\n    overflow,\n    overflowX,\n    className\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"overflow\", \"overflowX\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    className: cx(\"chakra-table__container\", className)\n  }, rest, {\n    __css: {\n      display: \"block\",\n      whiteSpace: \"nowrap\",\n      WebkitOverflowScrolling: \"touch\",\n      overflowX: (_ref = overflow != null ? overflow : overflowX) != null ? _ref : \"auto\",\n      overflowY: \"hidden\",\n      maxWidth: \"100%\"\n    }\n  }));\n});\nexport var Table = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useMultiStyleConfig(\"Table\", props);\n\n  var _omitThemingProps = omitThemingProps(props),\n      {\n    className\n  } = _omitThemingProps,\n      tableProps = _objectWithoutPropertiesLoose(_omitThemingProps, [\"className\"]);\n\n  return /*#__PURE__*/React.createElement(StylesProvider, {\n    value: styles\n  }, /*#__PURE__*/React.createElement(chakra.table, _extends({\n    role: \"table\",\n    ref: ref,\n    __css: styles.table,\n    className: cx(\"chakra-table\", className)\n  }, tableProps)));\n});\n\nif (__DEV__) {\n  Table.displayName = \"Table\";\n}\n\nexport var TableCaption = /*#__PURE__*/forwardRef((props, ref) => {\n  var {\n    placement = \"bottom\"\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"placement\"]);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.caption, _extends({}, rest, {\n    ref: ref,\n    __css: _extends({}, styles.caption, {\n      captionSide: placement\n    })\n  }));\n});\n\nif (__DEV__) {\n  TableCaption.displayName = \"TableCaption\";\n}\n\nexport var Thead = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.thead, _extends({}, props, {\n    ref: ref,\n    __css: styles.thead\n  }));\n});\nexport var Tbody = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tbody, _extends({}, props, {\n    ref: ref,\n    __css: styles.tbody\n  }));\n});\nexport var Tfoot = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tfoot, _extends({}, props, {\n    ref: ref,\n    __css: styles.tfoot\n  }));\n});\nexport var Th = /*#__PURE__*/forwardRef((_ref2, ref) => {\n  var {\n    isNumeric\n  } = _ref2,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"isNumeric\"]);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.th, _extends({}, rest, {\n    ref: ref,\n    __css: styles.th,\n    \"data-is-numeric\": isNumeric\n  }));\n});\nexport var Tr = /*#__PURE__*/forwardRef((props, ref) => {\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.tr, _extends({\n    role: \"row\"\n  }, props, {\n    ref: ref,\n    __css: styles.tr\n  }));\n});\nexport var Td = /*#__PURE__*/forwardRef((_ref3, ref) => {\n  var {\n    isNumeric\n  } = _ref3,\n      rest = _objectWithoutPropertiesLoose(_ref3, [\"isNumeric\"]);\n\n  var styles = useStyles();\n  return /*#__PURE__*/React.createElement(chakra.td, _extends({\n    role: \"gridcell\"\n  }, rest, {\n    ref: ref,\n    __css: styles.td,\n    \"data-is-numeric\": isNumeric\n  }));\n});","map":{"version":3,"sources":["../../src/table.tsx"],"names":["TableContainer","forwardRef","className","rest","cx","display","whiteSpace","WebkitOverflowScrolling","overflowX","overflow","overflowY","maxWidth","Table","styles","useMultiStyleConfig","tableProps","omitThemingProps","TableCaption","placement","useStyles","captionSide","Thead","thead","Tbody","tbody","Tfoot","tfoot","Th","isNumeric","Tr","tr","Td"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  StylesProvider,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface TableContainerProps extends HTMLChakraProps<\"div\"> {}\n\nexport const TableContainer = forwardRef<TableContainerProps, \"div\">(\n  (props: HTMLChakraProps<\"div\">, ref) => {\n    const { overflow, overflowX, className, ...rest } = props\n    return (\n      <chakra.div\n        ref={ref}\n        className={cx(\"chakra-table__container\", className)}\n        {...rest}\n        __css={{\n          display: \"block\",\n          whiteSpace: \"nowrap\",\n          WebkitOverflowScrolling: \"touch\",\n          overflowX: overflow ?? overflowX ?? \"auto\",\n          overflowY: \"hidden\",\n          maxWidth: \"100%\",\n        }}\n      />\n    )\n  },\n)\n\nexport interface TableProps\n  extends HTMLChakraProps<\"table\">,\n    ThemingProps<\"Table\"> {}\n\nexport const Table = forwardRef<TableProps, \"table\">((props, ref) => {\n  const styles = useMultiStyleConfig(\"Table\", props)\n  const { className, ...tableProps } = omitThemingProps(props)\n\n  return (\n    <StylesProvider value={styles}>\n      <chakra.table\n        role=\"table\"\n        ref={ref}\n        __css={styles.table}\n        className={cx(\"chakra-table\", className)}\n        {...tableProps}\n      />\n    </StylesProvider>\n  )\n})\n\nif (__DEV__) {\n  Table.displayName = \"Table\"\n}\n\nexport interface TableCaptionProps extends HTMLChakraProps<\"caption\"> {\n  /**\n   * The placement of the table caption. This sets the `caption-side` CSS attribute.\n   * @default \"bottom\"\n   */\n  placement?: \"top\" | \"bottom\"\n}\n\nexport const TableCaption = forwardRef<TableCaptionProps, \"caption\">(\n  (props, ref) => {\n    const { placement = \"bottom\", ...rest } = props\n    const styles = useStyles()\n    return (\n      <chakra.caption\n        {...rest}\n        ref={ref}\n        __css={{\n          ...styles.caption,\n          captionSide: placement,\n        }}\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  TableCaption.displayName = \"TableCaption\"\n}\n\nexport interface TableHeadProps extends HTMLChakraProps<\"thead\"> {}\n\nexport const Thead = forwardRef<TableHeadProps, \"thead\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.thead {...props} ref={ref} __css={styles.thead} />\n})\n\nexport interface TableBodyProps extends HTMLChakraProps<\"tbody\"> {}\n\nexport const Tbody = forwardRef<TableBodyProps, \"tbody\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.tbody {...props} ref={ref} __css={styles.tbody} />\n})\n\nexport interface TableFooterProps extends HTMLChakraProps<\"tfoot\"> {}\n\nexport const Tfoot = forwardRef<TableFooterProps, \"tfoot\">((props, ref) => {\n  const styles = useStyles()\n  return <chakra.tfoot {...props} ref={ref} __css={styles.tfoot} />\n})\n\nexport interface TableColumnHeaderProps extends HTMLChakraProps<\"th\"> {\n  /**\n   * Aligns the cell content to the right\n   */\n  isNumeric?: boolean\n}\nexport const Th = forwardRef<TableColumnHeaderProps, \"th\">(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useStyles()\n    return (\n      <chakra.th\n        {...rest}\n        ref={ref}\n        __css={styles.th}\n        data-is-numeric={isNumeric}\n      />\n    )\n  },\n)\n\nexport interface TableRowProps extends HTMLChakraProps<\"tr\"> {}\nexport const Tr = forwardRef<TableRowProps, \"tr\">((props, ref) => {\n  const styles = useStyles()\n\n  return <chakra.tr role=\"row\" {...props} ref={ref} __css={styles.tr} />\n})\n\nexport interface TableCellProps extends HTMLChakraProps<\"td\"> {\n  /**\n   * Aligns the cell content to the right\n   */\n  isNumeric?: boolean\n}\nexport const Td = forwardRef<TableCellProps, \"td\">(\n  ({ isNumeric, ...rest }, ref) => {\n    const styles = useStyles()\n\n    return (\n      <chakra.td\n        role=\"gridcell\"\n        {...rest}\n        ref={ref}\n        __css={styles.td}\n        data-is-numeric={isNumeric}\n      />\n    )\n  },\n)\n"]},"metadata":{},"sourceType":"module"}