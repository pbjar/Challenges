{"ast":null,"code":"import { BigNumber } from '@ethersproject/bignumber';\nexport class CurrencyValue {\n  constructor(currency, value) {\n    this.currency = currency;\n    this.value = value;\n  }\n\n  static fromString(currency, value) {\n    return new CurrencyValue(currency, BigNumber.from(value));\n  }\n\n  static zero(currency) {\n    return new CurrencyValue(currency, BigNumber.from(0));\n  }\n\n  toString() {\n    return this.value.toString();\n  }\n\n  format(overrideOptions = {}) {\n    return this.currency.format(this.value.toString(), overrideOptions);\n  }\n\n  checkCurrency(other) {\n    if (this.currency !== other.currency) {\n      throw new TypeError(`Currency mismatch ${this.currency.ticker} != ${other.currency.ticker}`);\n    }\n  }\n\n  map(fn) {\n    return new CurrencyValue(this.currency, fn(this.value));\n  }\n\n  add(other) {\n    this.checkCurrency(other);\n    return this.map(x => x.add(other.value));\n  }\n\n  sub(other) {\n    this.checkCurrency(other);\n    return this.map(x => x.sub(other.value));\n  }\n\n  mul(value) {\n    return this.map(x => x.mul(value));\n  }\n\n  div(value) {\n    return this.map(x => x.div(value));\n  }\n\n  mod(value) {\n    return this.map(x => x.mod(value));\n  }\n\n  equals(other) {\n    return this.currency === other.currency && this.value.eq(other.value);\n  }\n\n  lt(other) {\n    this.checkCurrency(other);\n    return this.value.lt(other.value);\n  }\n\n  lte(other) {\n    this.checkCurrency(other);\n    return this.value.lte(other.value);\n  }\n\n  gt(other) {\n    this.checkCurrency(other);\n    return this.value.gt(other.value);\n  }\n\n  gte(other) {\n    this.checkCurrency(other);\n    return this.value.gte(other.value);\n  }\n\n  isZero() {\n    return this.value.isZero();\n  }\n\n}","map":{"version":3,"sources":["../../../../src/model/CurrencyValue.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAAwC,0BAAxC;AAIA,OAAM,MAAO,aAAP,CAAoB;AACxB,EAAA,WAAA,CAAqB,QAArB,EAAkD,KAAlD,EAAkE;AAA7C,SAAA,QAAA,GAAA,QAAA;AAA6B,SAAA,KAAA,GAAA,KAAA;AAAoB;;AAErD,SAAV,UAAU,CAAC,QAAD,EAAqB,KAArB,EAAkC;AACjD,WAAO,IAAI,aAAJ,CAAkB,QAAlB,EAA4B,SAAS,CAAC,IAAV,CAAe,KAAf,CAA5B,CAAP;AACD;;AAEU,SAAJ,IAAI,CAAC,QAAD,EAAmB;AAC5B,WAAO,IAAI,aAAJ,CAAkB,QAAlB,EAA4B,SAAS,CAAC,IAAV,CAAe,CAAf,CAA5B,CAAP;AACD;;AAED,EAAA,QAAQ,GAAA;AACN,WAAO,KAAK,KAAL,CAAW,QAAX,EAAP;AACD;;AAED,EAAA,MAAM,CAAC,eAAA,GAAkD,EAAnD,EAAqD;AACzD,WAAO,KAAK,QAAL,CAAc,MAAd,CAAqB,KAAK,KAAL,CAAW,QAAX,EAArB,EAA4C,eAA5C,CAAP;AACD;;AAEO,EAAA,aAAa,CAAC,KAAD,EAAqB;AACxC,QAAI,KAAK,QAAL,KAAkB,KAAK,CAAC,QAA5B,EAAsC;AACpC,YAAM,IAAI,SAAJ,CAAc,qBAAqB,KAAK,QAAL,CAAc,MAAM,OAAO,KAAK,CAAC,QAAN,CAAe,MAAM,EAAnF,CAAN;AACD;AACF;;AAED,EAAA,GAAG,CAAC,EAAD,EAAoC;AACrC,WAAO,IAAI,aAAJ,CAAkB,KAAK,QAAvB,EAAiC,EAAE,CAAC,KAAK,KAAN,CAAnC,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,KAAD,EAAqB;AACtB,SAAK,aAAL,CAAmB,KAAnB;AACA,WAAO,KAAK,GAAL,CAAU,CAAD,IAAO,CAAC,CAAC,GAAF,CAAM,KAAK,CAAC,KAAZ,CAAhB,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,KAAD,EAAqB;AACtB,SAAK,aAAL,CAAmB,KAAnB;AACA,WAAO,KAAK,GAAL,CAAU,CAAD,IAAO,CAAC,CAAC,GAAF,CAAM,KAAK,CAAC,KAAZ,CAAhB,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,KAAD,EAAoB;AACrB,WAAO,KAAK,GAAL,CAAU,CAAD,IAAO,CAAC,CAAC,GAAF,CAAM,KAAN,CAAhB,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,KAAD,EAAoB;AACrB,WAAO,KAAK,GAAL,CAAU,CAAD,IAAO,CAAC,CAAC,GAAF,CAAM,KAAN,CAAhB,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,KAAD,EAAoB;AACrB,WAAO,KAAK,GAAL,CAAU,CAAD,IAAO,CAAC,CAAC,GAAF,CAAM,KAAN,CAAhB,CAAP;AACD;;AAED,EAAA,MAAM,CAAC,KAAD,EAAqB;AACzB,WAAO,KAAK,QAAL,KAAkB,KAAK,CAAC,QAAxB,IAAoC,KAAK,KAAL,CAAW,EAAX,CAAc,KAAK,CAAC,KAApB,CAA3C;AACD;;AAED,EAAA,EAAE,CAAC,KAAD,EAAqB;AACrB,SAAK,aAAL,CAAmB,KAAnB;AACA,WAAO,KAAK,KAAL,CAAW,EAAX,CAAc,KAAK,CAAC,KAApB,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,KAAD,EAAqB;AACtB,SAAK,aAAL,CAAmB,KAAnB;AACA,WAAO,KAAK,KAAL,CAAW,GAAX,CAAe,KAAK,CAAC,KAArB,CAAP;AACD;;AAED,EAAA,EAAE,CAAC,KAAD,EAAqB;AACrB,SAAK,aAAL,CAAmB,KAAnB;AACA,WAAO,KAAK,KAAL,CAAW,EAAX,CAAc,KAAK,CAAC,KAApB,CAAP;AACD;;AAED,EAAA,GAAG,CAAC,KAAD,EAAqB;AACtB,SAAK,aAAL,CAAmB,KAAnB;AACA,WAAO,KAAK,KAAL,CAAW,GAAX,CAAe,KAAK,CAAC,KAArB,CAAP;AACD;;AAED,EAAA,MAAM,GAAA;AACJ,WAAO,KAAK,KAAL,CAAW,MAAX,EAAP;AACD;;AA7EuB","sourceRoot":"","sourcesContent":["import { BigNumber } from '@ethersproject/bignumber';\nexport class CurrencyValue {\n    constructor(currency, value) {\n        this.currency = currency;\n        this.value = value;\n    }\n    static fromString(currency, value) {\n        return new CurrencyValue(currency, BigNumber.from(value));\n    }\n    static zero(currency) {\n        return new CurrencyValue(currency, BigNumber.from(0));\n    }\n    toString() {\n        return this.value.toString();\n    }\n    format(overrideOptions = {}) {\n        return this.currency.format(this.value.toString(), overrideOptions);\n    }\n    checkCurrency(other) {\n        if (this.currency !== other.currency) {\n            throw new TypeError(`Currency mismatch ${this.currency.ticker} != ${other.currency.ticker}`);\n        }\n    }\n    map(fn) {\n        return new CurrencyValue(this.currency, fn(this.value));\n    }\n    add(other) {\n        this.checkCurrency(other);\n        return this.map((x) => x.add(other.value));\n    }\n    sub(other) {\n        this.checkCurrency(other);\n        return this.map((x) => x.sub(other.value));\n    }\n    mul(value) {\n        return this.map((x) => x.mul(value));\n    }\n    div(value) {\n        return this.map((x) => x.div(value));\n    }\n    mod(value) {\n        return this.map((x) => x.mod(value));\n    }\n    equals(other) {\n        return this.currency === other.currency && this.value.eq(other.value);\n    }\n    lt(other) {\n        this.checkCurrency(other);\n        return this.value.lt(other.value);\n    }\n    lte(other) {\n        this.checkCurrency(other);\n        return this.value.lte(other.value);\n    }\n    gt(other) {\n        this.checkCurrency(other);\n        return this.value.gt(other.value);\n    }\n    gte(other) {\n        this.checkCurrency(other);\n        return this.value.gte(other.value);\n    }\n    isZero() {\n        return this.value.isZero();\n    }\n}\n//# sourceMappingURL=CurrencyValue.js.map"]},"metadata":{},"sourceType":"module"}