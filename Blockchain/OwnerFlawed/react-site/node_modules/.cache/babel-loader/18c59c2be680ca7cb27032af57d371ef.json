{"ast":null,"code":"import * as React from \"react\";\nexport function useButtonType(value) {\n  var [isButton, setIsButton] = React.useState(!value);\n  var refCallback = React.useCallback(node => {\n    if (!node) return;\n    setIsButton(node.tagName === \"BUTTON\");\n  }, []);\n  var type = isButton ? \"button\" : undefined;\n  return {\n    ref: refCallback,\n    type\n  };\n}","map":{"version":3,"sources":["../../src/use-button-type.tsx"],"names":["React","refCallback","node","setIsButton","type","isButton","ref"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAEA,OAAO,SAAA,aAAA,CAAA,KAAA,EAAkD;AACvD,MAAM,CAAA,QAAA,EAAA,WAAA,IAA0BA,KAAK,CAALA,QAAAA,CAAe,CAA/C,KAAgCA,CAAhC;AACA,MAAMC,WAAW,GAAG,KAAK,CAAL,WAAA,CAAmBC,IAAD,IAA8B;AAClE,QAAI,CAAJ,IAAA,EAAW;AACXC,IAAAA,WAAW,CAACD,IAAI,CAAJA,OAAAA,KAAZC,QAAW,CAAXA;AAFkB,GAAA,EAApB,EAAoB,CAApB;AAIA,MAAMC,IAAI,GAAGC,QAAQ,GAAA,QAAA,GAArB,SAAA;AACA,SAAO;AAAEC,IAAAA,GAAG,EAAL,WAAA;AAAoBF,IAAAA;AAApB,GAAP;AACD","sourcesContent":["import * as React from \"react\"\n\nexport function useButtonType(value?: React.ElementType) {\n  const [isButton, setIsButton] = React.useState(!value)\n  const refCallback = React.useCallback((node: HTMLElement | null) => {\n    if (!node) return\n    setIsButton(node.tagName === \"BUTTON\")\n  }, [])\n  const type = isButton ? \"button\" : undefined\n  return { ref: refCallback, type } as const\n}\n"]},"metadata":{},"sourceType":"module"}