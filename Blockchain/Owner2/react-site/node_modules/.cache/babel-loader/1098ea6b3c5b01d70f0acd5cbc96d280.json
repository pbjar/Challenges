{"ast":null,"code":"function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { cx, __DEV__ } from \"@chakra-ui/utils\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport * as React from \"react\";\nimport { slideTransition, TransitionEasings, withDelay } from \"./transition-utils\";\nvar defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TransitionEasings.easeInOut\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180\n  }\n};\nvar variants = {\n  exit: _ref => {\n    var _transition$exit;\n\n    var {\n      direction,\n      transition,\n      transitionEnd,\n      delay\n    } = _ref;\n    var {\n      exit: exitStyles\n    } = slideTransition({\n      direction\n    });\n    return _extends({}, exitStyles, {\n      transition: (_transition$exit = transition == null ? void 0 : transition.exit) != null ? _transition$exit : withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.exit\n    });\n  },\n  enter: _ref2 => {\n    var _transition$enter;\n\n    var {\n      direction,\n      transitionEnd,\n      transition,\n      delay\n    } = _ref2;\n    var {\n      enter: enterStyles\n    } = slideTransition({\n      direction\n    });\n    return _extends({}, enterStyles, {\n      transition: (_transition$enter = transition == null ? void 0 : transition.enter) != null ? _transition$enter : withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd == null ? void 0 : transitionEnd.enter\n    });\n  }\n};\nexport var Slide = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var {\n    direction = \"right\",\n    style,\n    unmountOnExit,\n    in: isOpen,\n    className,\n    transition,\n    transitionEnd,\n    delay\n  } = props,\n      rest = _objectWithoutPropertiesLoose(props, [\"direction\", \"style\", \"unmountOnExit\", \"in\", \"className\", \"transition\", \"transitionEnd\", \"delay\"]);\n\n  var transitionStyles = slideTransition({\n    direction\n  });\n  var computedStyle = Object.assign({\n    position: \"fixed\"\n  }, transitionStyles.position, style);\n  var show = unmountOnExit ? isOpen && unmountOnExit : true;\n  var animate = isOpen || unmountOnExit ? \"enter\" : \"exit\";\n  var custom = {\n    transitionEnd,\n    transition,\n    direction,\n    delay\n  };\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    custom: custom\n  }, show && /*#__PURE__*/React.createElement(motion.div, _extends({\n    ref: ref,\n    initial: \"exit\",\n    className: cx(\"chakra-slide\", className),\n    animate: animate,\n    exit: \"exit\",\n    custom: custom,\n    variants: variants,\n    style: computedStyle\n  }, rest)));\n});\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\";\n}","map":{"version":3,"sources":["../../src/slide.tsx"],"names":["defaultTransition","exit","duration","ease","TransitionEasings","easeInOut","enter","type","damping","stiffness","variants","delay","exitStyles","slideTransition","direction","transition","withDelay","transitionEnd","enterStyles","Slide","in","rest","transitionStyles","computedStyle","position","show","unmountOnExit","isOpen","animate","custom","cx"],"mappings":"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","sourcesContent":["import { cx, __DEV__ } from \"@chakra-ui/utils\"\nimport {\n  AnimatePresence,\n  HTMLMotionProps,\n  motion,\n  MotionStyle,\n  Variants as _Variants,\n} from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  SlideDirection,\n  slideTransition,\n  TransitionEasings,\n  Variants,\n  withDelay,\n  WithTransitionConfig,\n} from \"./transition-utils\"\n\nexport type { SlideDirection }\n\nconst defaultTransition = {\n  exit: {\n    duration: 0.15,\n    ease: TransitionEasings.easeInOut,\n  },\n  enter: {\n    type: \"spring\",\n    damping: 25,\n    stiffness: 180,\n  },\n}\n\nconst variants: Variants<SlideOptions> = {\n  exit: ({ direction, transition, transitionEnd, delay }) => {\n    const { exit: exitStyles } = slideTransition({ direction })\n    return {\n      ...exitStyles,\n      transition:\n        transition?.exit ?? withDelay.exit(defaultTransition.exit, delay),\n      transitionEnd: transitionEnd?.exit,\n    }\n  },\n  enter: ({ direction, transitionEnd, transition, delay }) => {\n    const { enter: enterStyles } = slideTransition({ direction })\n    return {\n      ...enterStyles,\n      transition:\n        transition?.enter ?? withDelay.enter(defaultTransition.enter, delay),\n      transitionEnd: transitionEnd?.enter,\n    }\n  },\n}\n\nexport interface SlideOptions {\n  /**\n   * The direction to slide from\n   * @default \"right\"\n   */\n  direction?: SlideDirection\n}\n\nexport interface SlideProps\n  extends WithTransitionConfig<HTMLMotionProps<\"div\">>,\n    SlideOptions {}\n\nexport const Slide = React.forwardRef<HTMLDivElement, SlideProps>(\n  (props, ref) => {\n    const {\n      direction = \"right\",\n      style,\n      unmountOnExit,\n      in: isOpen,\n      className,\n      transition,\n      transitionEnd,\n      delay,\n      ...rest\n    } = props\n\n    const transitionStyles = slideTransition({ direction })\n    const computedStyle: MotionStyle = Object.assign(\n      { position: \"fixed\" },\n      transitionStyles.position,\n      style,\n    )\n\n    const show = unmountOnExit ? isOpen && unmountOnExit : true\n    const animate = isOpen || unmountOnExit ? \"enter\" : \"exit\"\n\n    const custom = { transitionEnd, transition, direction, delay }\n\n    return (\n      <AnimatePresence custom={custom}>\n        {show && (\n          <motion.div\n            ref={ref}\n            initial=\"exit\"\n            className={cx(\"chakra-slide\", className)}\n            animate={animate}\n            exit=\"exit\"\n            custom={custom}\n            variants={variants as _Variants}\n            style={computedStyle}\n            {...rest}\n          />\n        )}\n      </AnimatePresence>\n    )\n  },\n)\n\nif (__DEV__) {\n  Slide.displayName = \"Slide\"\n}\n"]},"metadata":{},"sourceType":"module"}