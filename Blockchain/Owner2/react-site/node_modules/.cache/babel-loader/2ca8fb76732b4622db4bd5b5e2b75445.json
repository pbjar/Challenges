{"ast":null,"code":"import { popoverAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { cssVar, mode } from \"@chakra-ui/theme-tools\";\nvar $popperBg = cssVar(\"popper-bg\");\nvar $arrowBg = cssVar(\"popper-arrow-bg\");\nvar $arrowShadowColor = cssVar(\"popper-arrow-shadow-color\");\nvar baseStylePopper = {\n  zIndex: 10\n};\n\nvar baseStyleContent = props => {\n  var bg = mode(\"white\", \"gray.700\")(props);\n  var shadowColor = mode(\"gray.200\", \"whiteAlpha.300\")(props);\n  return {\n    [$popperBg.variable]: \"colors.\" + bg,\n    bg: $popperBg.reference,\n    [$arrowBg.variable]: $popperBg.reference,\n    [$arrowShadowColor.variable]: \"colors.\" + shadowColor,\n    width: \"xs\",\n    border: \"1px solid\",\n    borderColor: \"inherit\",\n    borderRadius: \"md\",\n    boxShadow: \"sm\",\n    zIndex: \"inherit\",\n    _focus: {\n      outline: 0,\n      boxShadow: \"outline\"\n    }\n  };\n};\n\nvar baseStyleHeader = {\n  px: 3,\n  py: 2,\n  borderBottomWidth: \"1px\"\n};\nvar baseStyleBody = {\n  px: 3,\n  py: 2\n};\nvar baseStyleFooter = {\n  px: 3,\n  py: 2,\n  borderTopWidth: \"1px\"\n};\n\nvar baseStyle = props => ({\n  popper: baseStylePopper,\n  content: baseStyleContent(props),\n  header: baseStyleHeader,\n  body: baseStyleBody,\n  footer: baseStyleFooter,\n  arrow: {}\n});\n\nexport default {\n  parts: parts.keys,\n  baseStyle\n};","map":{"version":3,"sources":["../../../src/components/popover.ts"],"names":["popoverAnatomy","$popperBg","cssVar","$arrowBg","$arrowShadowColor","baseStylePopper","zIndex","baseStyleContent","props","bg","mode","shadowColor","width","border","borderColor","borderRadius","boxShadow","_focus","outline","baseStyleHeader","px","py","borderBottomWidth","baseStyleBody","baseStyleFooter","borderTopWidth","baseStyle","popper","content","header","body","footer","arrow","parts"],"mappings":"AAAA,SAASA,cAAc,IAAvB,KAAA,QAAA,oBAAA;AAMA,SAAA,MAAA,EAAA,IAAA,QAAA,wBAAA;AAEA,IAAMC,SAAS,GAAGC,MAAM,CAAxB,WAAwB,CAAxB;AAEA,IAAMC,QAAQ,GAAGD,MAAM,CAAvB,iBAAuB,CAAvB;AACA,IAAME,iBAAiB,GAAGF,MAAM,CAAhC,2BAAgC,CAAhC;AAEA,IAAMG,eAAkC,GAAG;AACzCC,EAAAA,MAAM,EAAE;AADiC,CAA3C;;AAIA,IAAMC,gBAAqC,GAAIC,KAAD,IAAW;AACvD,MAAMC,EAAE,GAAGC,IAAI,CAAA,OAAA,EAAJA,UAAI,CAAJA,CAAX,KAAWA,CAAX;AACA,MAAMC,WAAW,GAAGD,IAAI,CAAA,UAAA,EAAJA,gBAAI,CAAJA,CAApB,KAAoBA,CAApB;AAEA,SAAO;AACL,KAACT,SAAS,CAAV,QAAA,GAAA,YADK,EAAA;AAELQ,IAAAA,EAAE,EAAER,SAAS,CAFR,SAAA;AAGL,KAACE,QAAQ,CAAT,QAAA,GAAqBF,SAAS,CAHzB,SAAA;AAIL,KAACG,iBAAiB,CAAlB,QAAA,GAAA,YAJK,WAAA;AAKLQ,IAAAA,KAAK,EALA,IAAA;AAMLC,IAAAA,MAAM,EAND,WAAA;AAOLC,IAAAA,WAAW,EAPN,SAAA;AAQLC,IAAAA,YAAY,EARP,IAAA;AASLC,IAAAA,SAAS,EATJ,IAAA;AAULV,IAAAA,MAAM,EAVD,SAAA;AAWLW,IAAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EADD,CAAA;AAENF,MAAAA,SAAS,EAAE;AAFL;AAXH,GAAP;AAJF,CAAA;;AAsBA,IAAMG,eAAkC,GAAG;AACzCC,EAAAA,EAAE,EADuC,CAAA;AAEzCC,EAAAA,EAAE,EAFuC,CAAA;AAGzCC,EAAAA,iBAAiB,EAAE;AAHsB,CAA3C;AAMA,IAAMC,aAAgC,GAAG;AACvCH,EAAAA,EAAE,EADqC,CAAA;AAEvCC,EAAAA,EAAE,EAAE;AAFmC,CAAzC;AAKA,IAAMG,eAAkC,GAAG;AACzCJ,EAAAA,EAAE,EADuC,CAAA;AAEzCC,EAAAA,EAAE,EAFuC,CAAA;AAGzCI,EAAAA,cAAc,EAAE;AAHyB,CAA3C;;AAMA,IAAMC,SAA2C,GAAIlB,KAAD,KAAY;AAC9DmB,EAAAA,MAAM,EADwD,eAAA;AAE9DC,EAAAA,OAAO,EAAErB,gBAAgB,CAFqC,KAErC,CAFqC;AAG9DsB,EAAAA,MAAM,EAHwD,eAAA;AAI9DC,EAAAA,IAAI,EAJ0D,aAAA;AAK9DC,EAAAA,MAAM,EALwD,eAAA;AAM9DC,EAAAA,KAAK,EAAE;AANuD,CAAZ,CAApD;;AASA,eAAe;AACbC,EAAAA,KAAK,EAAEA,KAAK,CADC,IAAA;AAEbP,EAAAA;AAFa,CAAf","sourcesContent":["import { popoverAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport type {\n  PartsStyleFunction,\n  SystemStyleFunction,\n  SystemStyleObject,\n} from \"@chakra-ui/theme-tools\"\nimport { cssVar, mode } from \"@chakra-ui/theme-tools\"\n\nconst $popperBg = cssVar(\"popper-bg\")\n\nconst $arrowBg = cssVar(\"popper-arrow-bg\")\nconst $arrowShadowColor = cssVar(\"popper-arrow-shadow-color\")\n\nconst baseStylePopper: SystemStyleObject = {\n  zIndex: 10,\n}\n\nconst baseStyleContent: SystemStyleFunction = (props) => {\n  const bg = mode(\"white\", \"gray.700\")(props)\n  const shadowColor = mode(\"gray.200\", \"whiteAlpha.300\")(props)\n\n  return {\n    [$popperBg.variable]: `colors.${bg}`,\n    bg: $popperBg.reference,\n    [$arrowBg.variable]: $popperBg.reference,\n    [$arrowShadowColor.variable]: `colors.${shadowColor}`,\n    width: \"xs\",\n    border: \"1px solid\",\n    borderColor: \"inherit\",\n    borderRadius: \"md\",\n    boxShadow: \"sm\",\n    zIndex: \"inherit\",\n    _focus: {\n      outline: 0,\n      boxShadow: \"outline\",\n    },\n  }\n}\n\nconst baseStyleHeader: SystemStyleObject = {\n  px: 3,\n  py: 2,\n  borderBottomWidth: \"1px\",\n}\n\nconst baseStyleBody: SystemStyleObject = {\n  px: 3,\n  py: 2,\n}\n\nconst baseStyleFooter: SystemStyleObject = {\n  px: 3,\n  py: 2,\n  borderTopWidth: \"1px\",\n}\n\nconst baseStyle: PartsStyleFunction<typeof parts> = (props) => ({\n  popper: baseStylePopper,\n  content: baseStyleContent(props),\n  header: baseStyleHeader,\n  body: baseStyleBody,\n  footer: baseStyleFooter,\n  arrow: {},\n})\n\nexport default {\n  parts: parts.keys,\n  baseStyle,\n}\n"]},"metadata":{},"sourceType":"module"}