{"ast":null,"code":"import { mode } from \"@chakra-ui/theme-tools\";\nvar parts = [\"container\", \"track\", \"thumb\"];\n\nfunction baseStyleTrack(props) {\n  var {\n    colorScheme: c\n  } = props;\n  return {\n    borderRadius: \"full\",\n    p: \"2px\",\n    width: \"var(--slider-track-width)\",\n    height: \"var(--slider-track-height)\",\n    transitionProperty: \"common\",\n    transitionDuration: \"fast\",\n    bg: mode(\"gray.300\", \"whiteAlpha.400\")(props),\n    _focus: {\n      boxShadow: \"outline\"\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\"\n    },\n    _checked: {\n      bg: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n}\n\nvar baseStyleThumb = {\n  bg: \"white\",\n  transitionProperty: \"transform\",\n  transitionDuration: \"normal\",\n  borderRadius: \"inherit\",\n  width: \"var(--slider-track-height)\",\n  height: \"var(--slider-track-height)\",\n  _checked: {\n    transform: \"translateX(var(--slider-thumb-x))\"\n  }\n};\n\nvar baseStyle = props => ({\n  container: {\n    \"--slider-track-diff\": \"calc(var(--slider-track-width) - var(--slider-track-height))\",\n    \"--slider-thumb-x\": \"var(--slider-track-diff)\",\n    _rtl: {\n      \"--slider-thumb-x\": \"calc(-1 * var(--slider-track-diff))\"\n    }\n  },\n  track: baseStyleTrack(props),\n  thumb: baseStyleThumb\n});\n\nvar sizes = {\n  sm: {\n    container: {\n      \"--slider-track-width\": \"1.375rem\",\n      \"--slider-track-height\": \"0.75rem\"\n    }\n  },\n  md: {\n    container: {\n      \"--slider-track-width\": \"1.875rem\",\n      \"--slider-track-height\": \"1rem\"\n    }\n  },\n  lg: {\n    container: {\n      \"--slider-track-width\": \"2.875rem\",\n      \"--slider-track-height\": \"1.5rem\"\n    }\n  }\n};\nvar defaultProps = {\n  size: \"md\",\n  colorScheme: \"blue\"\n};\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps\n};","map":{"version":3,"sources":["../../../src/components/switch.ts"],"names":["parts","colorScheme","c","borderRadius","p","width","height","transitionProperty","transitionDuration","bg","mode","_focus","boxShadow","_disabled","opacity","cursor","_checked","baseStyleThumb","transform","baseStyle","props","container","_rtl","track","baseStyleTrack","thumb","sizes","sm","md","lg","defaultProps","size"],"mappings":"AAAA,SAAA,IAAA,QAAA,wBAAA;AAEA,IAAMA,KAAK,GAAG,CAAA,WAAA,EAAA,OAAA,EAAd,OAAc,CAAd;;AAEA,SAAA,cAAA,CAAA,KAAA,EAAoD;AAClD,MAAM;AAAEC,IAAAA,WAAW,EAAEC;AAAf,MAAN,KAAA;AAEA,SAAO;AACLC,IAAAA,YAAY,EADP,MAAA;AAELC,IAAAA,CAAC,EAFI,KAAA;AAGLC,IAAAA,KAAK,EAHA,2BAAA;AAILC,IAAAA,MAAM,EAJD,4BAAA;AAKLC,IAAAA,kBAAkB,EALb,QAAA;AAMLC,IAAAA,kBAAkB,EANb,MAAA;AAOLC,IAAAA,EAAE,EAAEC,IAAI,CAAA,UAAA,EAAJA,gBAAI,CAAJA,CAPC,KAODA,CAPC;AAQLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE;AADL,KARH;AAWLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EADE,GAAA;AAETC,MAAAA,MAAM,EAAE;AAFC,KAXN;AAeLC,IAAAA,QAAQ,EAAE;AACRP,MAAAA,EAAE,EAAEC,IAAI,CAAIR,CAAJ,GAAA,MAAA,EAAgBA,CAAhB,GAAJQ,MAAI,CAAJA,CAAAA,KAAAA;AADI;AAfL,GAAP;AAmBD;;AAED,IAAMO,cAAc,GAAG;AACrBR,EAAAA,EAAE,EADmB,OAAA;AAErBF,EAAAA,kBAAkB,EAFG,WAAA;AAGrBC,EAAAA,kBAAkB,EAHG,QAAA;AAIrBL,EAAAA,YAAY,EAJS,SAAA;AAKrBE,EAAAA,KAAK,EALgB,4BAAA;AAMrBC,EAAAA,MAAM,EANe,4BAAA;AAOrBU,EAAAA,QAAQ,EAAE;AACRE,IAAAA,SAAS,EAAE;AADH;AAPW,CAAvB;;AAYA,IAAMC,SAAS,GAAIC,KAAD,KAAiC;AACjDC,EAAAA,SAAS,EAAE;AACT,2BADS,8DAAA;AAGT,wBAHS,0BAAA;AAITC,IAAAA,IAAI,EAAE;AACJ,0BAAoB;AADhB;AAJG,GADsC;AASjDC,EAAAA,KAAK,EAAEC,cAAc,CAT4B,KAS5B,CAT4B;AAUjDC,EAAAA,KAAK,EAAER;AAV0C,CAAjC,CAAlB;;AAaA,IAAMS,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE;AACFN,IAAAA,SAAS,EAAE;AACT,8BADS,UAAA;AAET,+BAAyB;AAFhB;AADT,GADQ;AAOZO,EAAAA,EAAE,EAAE;AACFP,IAAAA,SAAS,EAAE;AACT,8BADS,UAAA;AAET,+BAAyB;AAFhB;AADT,GAPQ;AAaZQ,EAAAA,EAAE,EAAE;AACFR,IAAAA,SAAS,EAAE;AACT,8BADS,UAAA;AAET,+BAAyB;AAFhB;AADT;AAbQ,CAAd;AAqBA,IAAMS,YAAY,GAAG;AACnBC,EAAAA,IAAI,EADe,IAAA;AAEnB9B,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe;AAAA,EAAA,KAAA;AAAA,EAAA,SAAA;AAAA,EAAA,KAAA;AAIb6B,EAAAA;AAJa,CAAf","sourcesContent":["import { mode } from \"@chakra-ui/theme-tools\"\n\nconst parts = [\"container\", \"track\", \"thumb\"]\n\nfunction baseStyleTrack(props: Record<string, any>) {\n  const { colorScheme: c } = props\n\n  return {\n    borderRadius: \"full\",\n    p: \"2px\",\n    width: \"var(--slider-track-width)\",\n    height: \"var(--slider-track-height)\",\n    transitionProperty: \"common\",\n    transitionDuration: \"fast\",\n    bg: mode(\"gray.300\", \"whiteAlpha.400\")(props),\n    _focus: {\n      boxShadow: \"outline\",\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\",\n    },\n    _checked: {\n      bg: mode(`${c}.500`, `${c}.200`)(props),\n    },\n  }\n}\n\nconst baseStyleThumb = {\n  bg: \"white\",\n  transitionProperty: \"transform\",\n  transitionDuration: \"normal\",\n  borderRadius: \"inherit\",\n  width: \"var(--slider-track-height)\",\n  height: \"var(--slider-track-height)\",\n  _checked: {\n    transform: \"translateX(var(--slider-thumb-x))\",\n  },\n}\n\nconst baseStyle = (props: Record<string, any>) => ({\n  container: {\n    \"--slider-track-diff\":\n      \"calc(var(--slider-track-width) - var(--slider-track-height))\",\n    \"--slider-thumb-x\": \"var(--slider-track-diff)\",\n    _rtl: {\n      \"--slider-thumb-x\": \"calc(-1 * var(--slider-track-diff))\",\n    },\n  },\n  track: baseStyleTrack(props),\n  thumb: baseStyleThumb,\n})\n\nconst sizes = {\n  sm: {\n    container: {\n      \"--slider-track-width\": \"1.375rem\",\n      \"--slider-track-height\": \"0.75rem\",\n    },\n  },\n  md: {\n    container: {\n      \"--slider-track-width\": \"1.875rem\",\n      \"--slider-track-height\": \"1rem\",\n    },\n  },\n  lg: {\n    container: {\n      \"--slider-track-width\": \"2.875rem\",\n      \"--slider-track-height\": \"1.5rem\",\n    },\n  },\n}\n\nconst defaultProps = {\n  size: \"md\",\n  colorScheme: \"blue\",\n}\n\nexport default {\n  parts,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}