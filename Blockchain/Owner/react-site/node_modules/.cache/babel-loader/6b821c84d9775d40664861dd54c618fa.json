{"ast":null,"code":"import { useMemo } from 'react';\nimport { useChainCalls } from './useChainCalls';\n\nfunction warnOnInvalidContractCall(call) {\n  console.warn(`Invalid contract call: address=${call && call.address} method=${call && call.method} args=${call && call.args}`);\n}\n\nfunction encodeCallData(call) {\n  try {\n    return call && {\n      address: call.address,\n      data: call.abi.encodeFunctionData(call.method, call.args)\n    };\n  } catch (_a) {\n    warnOnInvalidContractCall(call);\n    return undefined;\n  }\n}\n\nexport function useContractCall(call) {\n  return useContractCalls([call])[0];\n}\nexport function useContractCalls(calls) {\n  const results = useChainCalls(calls.map(encodeCallData));\n  return useMemo(() => results.map((result, idx) => {\n    const call = calls[idx];\n\n    if (result === '0x') {\n      warnOnInvalidContractCall(call);\n      return undefined;\n    }\n\n    return call && result ? call.abi.decodeFunctionResult(call.method, result) : undefined;\n  }), [results]);\n}","map":{"version":3,"sources":["../../../../src/hooks/useContractCall.ts"],"names":[],"mappings":"AACA,SAAS,OAAT,QAAwB,OAAxB;AAEA,SAAS,aAAT,QAA8B,iBAA9B;;AAGA,SAAS,yBAAT,CAAmC,IAAnC,EAA6D;AAC3D,EAAA,OAAO,CAAC,IAAR,CACE,kCAAkC,IAAI,IAAI,IAAI,CAAC,OAAO,WAAW,IAAI,IAAI,IAAI,CAAC,MAAM,SAAS,IAAI,IAAI,IAAI,CAAC,IAAI,EADhH;AAGD;;AAED,SAAS,cAAT,CAAwB,IAAxB,EAAkD;AAChD,MAAI;AACF,WAAO,IAAI,IAAI;AAAE,MAAA,OAAO,EAAE,IAAI,CAAC,OAAhB;AAAyB,MAAA,IAAI,EAAE,IAAI,CAAC,GAAL,CAAS,kBAAT,CAA4B,IAAI,CAAC,MAAjC,EAAyC,IAAI,CAAC,IAA9C;AAA/B,KAAf;AACD,GAFD,CAEE,OAAA,EAAA,EAAM;AACN,IAAA,yBAAyB,CAAC,IAAD,CAAzB;AACA,WAAO,SAAP;AACD;AACF;;AASD,OAAM,SAAU,eAAV,CAA0B,IAA1B,EAAoD;AACxD,SAAO,gBAAgB,CAAC,CAAC,IAAD,CAAD,CAAhB,CAAyB,CAAzB,CAAP;AACD;AAED,OAAM,SAAU,gBAAV,CAA2B,KAA3B,EAA0D;AAC9D,QAAM,OAAO,GAAG,aAAa,CAAC,KAAK,CAAC,GAAN,CAAU,cAAV,CAAD,CAA7B;AAEA,SAAO,OAAO,CACZ,MACE,OAAO,CAAC,GAAR,CAAY,CAAC,MAAD,EAAS,GAAT,KAAgB;AAC1B,UAAM,IAAI,GAAG,KAAK,CAAC,GAAD,CAAlB;;AACA,QAAI,MAAM,KAAK,IAAf,EAAqB;AACnB,MAAA,yBAAyB,CAAC,IAAD,CAAzB;AACA,aAAO,SAAP;AACD;;AACD,WAAO,IAAI,IAAI,MAAR,GAAkB,IAAI,CAAC,GAAL,CAAS,oBAAT,CAA8B,IAAI,CAAC,MAAnC,EAA2C,MAA3C,CAAlB,GAAiF,SAAxF;AACD,GAPD,CAFU,EAUZ,CAAC,OAAD,CAVY,CAAd;AAYD","sourceRoot":"","sourcesContent":["import { useMemo } from 'react';\nimport { useChainCalls } from './useChainCalls';\nfunction warnOnInvalidContractCall(call) {\n    console.warn(`Invalid contract call: address=${call && call.address} method=${call && call.method} args=${call && call.args}`);\n}\nfunction encodeCallData(call) {\n    try {\n        return call && { address: call.address, data: call.abi.encodeFunctionData(call.method, call.args) };\n    }\n    catch (_a) {\n        warnOnInvalidContractCall(call);\n        return undefined;\n    }\n}\nexport function useContractCall(call) {\n    return useContractCalls([call])[0];\n}\nexport function useContractCalls(calls) {\n    const results = useChainCalls(calls.map(encodeCallData));\n    return useMemo(() => results.map((result, idx) => {\n        const call = calls[idx];\n        if (result === '0x') {\n            warnOnInvalidContractCall(call);\n            return undefined;\n        }\n        return call && result ? call.abi.decodeFunctionResult(call.method, result) : undefined;\n    }), [results]);\n}\n//# sourceMappingURL=useContractCall.js.map"]},"metadata":{},"sourceType":"module"}