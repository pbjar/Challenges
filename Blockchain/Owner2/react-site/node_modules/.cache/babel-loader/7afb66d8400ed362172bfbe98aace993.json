{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Subscribable } from './subscribable';\nimport { isServer } from './utils';\n\nvar FocusManager = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(FocusManager, _Subscribable);\n\n  function FocusManager() {\n    return _Subscribable.apply(this, arguments) || this;\n  }\n\n  var _proto = FocusManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.removeEventListener) {\n      this.setDefaultEventListener();\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this = this;\n\n    if (this.removeEventListener) {\n      this.removeEventListener();\n    }\n\n    this.removeEventListener = setup(function (focused) {\n      if (typeof focused === 'boolean') {\n        _this.setFocused(focused);\n      } else {\n        _this.onFocus();\n      }\n    });\n  };\n\n  _proto.setFocused = function setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isFocused = function isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  };\n\n  _proto.setDefaultEventListener = function setDefaultEventListener() {\n    var _window;\n\n    if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n      this.setEventListener(function (onFocus) {\n        var listener = function listener() {\n          return onFocus();\n        }; // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      });\n    }\n  };\n\n  return FocusManager;\n}(Subscribable);\n\nexport var focusManager = new FocusManager();","map":{"version":3,"sources":["/home/mark/Desktop/Challenges/Blockchain/Owner/react-site/node_modules/react-query/es/core/focusManager.js"],"names":["_inheritsLoose","Subscribable","isServer","FocusManager","_Subscribable","apply","arguments","_proto","prototype","onSubscribe","removeEventListener","setDefaultEventListener","setEventListener","setup","_this","focused","setFocused","onFocus","listeners","forEach","listener","isFocused","document","undefined","includes","visibilityState","_window","window","addEventListener","focusManager"],"mappings":"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","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { Subscribable } from './subscribable';\nimport { isServer } from './utils';\n\nvar FocusManager = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(FocusManager, _Subscribable);\n\n  function FocusManager() {\n    return _Subscribable.apply(this, arguments) || this;\n  }\n\n  var _proto = FocusManager.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    if (!this.removeEventListener) {\n      this.setDefaultEventListener();\n    }\n  };\n\n  _proto.setEventListener = function setEventListener(setup) {\n    var _this = this;\n\n    if (this.removeEventListener) {\n      this.removeEventListener();\n    }\n\n    this.removeEventListener = setup(function (focused) {\n      if (typeof focused === 'boolean') {\n        _this.setFocused(focused);\n      } else {\n        _this.onFocus();\n      }\n    });\n  };\n\n  _proto.setFocused = function setFocused(focused) {\n    this.focused = focused;\n\n    if (focused) {\n      this.onFocus();\n    }\n  };\n\n  _proto.onFocus = function onFocus() {\n    this.listeners.forEach(function (listener) {\n      listener();\n    });\n  };\n\n  _proto.isFocused = function isFocused() {\n    if (typeof this.focused === 'boolean') {\n      return this.focused;\n    } // document global can be unavailable in react native\n\n\n    if (typeof document === 'undefined') {\n      return true;\n    }\n\n    return [undefined, 'visible', 'prerender'].includes(document.visibilityState);\n  };\n\n  _proto.setDefaultEventListener = function setDefaultEventListener() {\n    var _window;\n\n    if (!isServer && ((_window = window) == null ? void 0 : _window.addEventListener)) {\n      this.setEventListener(function (onFocus) {\n        var listener = function listener() {\n          return onFocus();\n        }; // Listen to visibillitychange and focus\n\n\n        window.addEventListener('visibilitychange', listener, false);\n        window.addEventListener('focus', listener, false);\n        return function () {\n          // Be sure to unsubscribe if a new handler is set\n          window.removeEventListener('visibilitychange', listener);\n          window.removeEventListener('focus', listener);\n        };\n      });\n    }\n  };\n\n  return FocusManager;\n}(Subscribable);\n\nexport var focusManager = new FocusManager();"]},"metadata":{},"sourceType":"module"}