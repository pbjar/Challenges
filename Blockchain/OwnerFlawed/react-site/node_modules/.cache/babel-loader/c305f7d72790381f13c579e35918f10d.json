{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction orient(options) {\n  var {\n    orientation,\n    vertical,\n    horizontal\n  } = options;\n  return orientation === \"vertical\" ? vertical : horizontal;\n}\n\nexport function getPartsStyle(options) {\n  var {\n    orientation,\n    trackPercent,\n    thumbRect,\n    isReversed\n  } = options;\n\n  var thumbStyle = _extends({\n    position: \"absolute\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    msUserSelect: \"none\",\n    touchAction: \"none\"\n  }, orient({\n    orientation,\n    vertical: {\n      bottom: \"calc(\" + trackPercent + \"% - \" + thumbRect.height / 2 + \"px)\"\n    },\n    horizontal: {\n      left: \"calc(\" + trackPercent + \"% - \" + thumbRect.width / 2 + \"px)\"\n    }\n  }));\n\n  var rootStyle = _extends({\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0\n  }, orient({\n    orientation,\n    vertical: {\n      paddingLeft: thumbRect.width / 2,\n      paddingRight: thumbRect.width / 2\n    },\n    horizontal: {\n      paddingTop: thumbRect.height / 2,\n      paddingBottom: thumbRect.height / 2\n    }\n  }));\n\n  var trackStyle = _extends({\n    position: \"absolute\"\n  }, orient({\n    orientation,\n    vertical: {\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      height: \"100%\"\n    },\n    horizontal: {\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      width: \"100%\"\n    }\n  }));\n\n  var innerTrackStyle = _extends({}, trackStyle, orient({\n    orientation,\n    vertical: isReversed ? {\n      height: 100 - trackPercent + \"%\",\n      top: 0\n    } : {\n      height: trackPercent + \"%\",\n      bottom: 0\n    },\n    horizontal: isReversed ? {\n      width: 100 - trackPercent + \"%\",\n      right: 0\n    } : {\n      width: trackPercent + \"%\",\n      left: 0\n    }\n  }));\n\n  return {\n    trackStyle,\n    innerTrackStyle,\n    rootStyle,\n    thumbStyle\n  };\n}","map":{"version":3,"sources":["../../src/slider-utils.ts"],"names":["horizontal","orientation","isReversed","thumbStyle","position","userSelect","WebkitUserSelect","MozUserSelect","msUserSelect","touchAction","orient","vertical","bottom","thumbRect","left","rootStyle","WebkitTapHighlightColor","outline","paddingLeft","paddingRight","paddingTop","paddingBottom","trackStyle","transform","height","top","width","innerTrackStyle","trackPercent","right"],"mappings":"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","sourcesContent":["import { CSSProperties } from \"react\"\n\ntype Orientation = \"vertical\" | \"horizontal\"\n\nfunction orient(options: {\n  orientation: Orientation\n  vertical: CSSProperties\n  horizontal: CSSProperties\n}) {\n  const { orientation, vertical, horizontal } = options\n  return orientation === \"vertical\" ? vertical : horizontal\n}\n\nexport function getPartsStyle(options: {\n  orientation: Orientation\n  trackPercent: number\n  thumbRect: { height: number; width: number }\n  isReversed?: boolean\n}) {\n  const { orientation, trackPercent, thumbRect, isReversed } = options\n\n  const thumbStyle: CSSProperties = {\n    position: \"absolute\",\n    userSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    MozUserSelect: \"none\",\n    msUserSelect: \"none\",\n    touchAction: \"none\",\n    ...orient({\n      orientation,\n      vertical: {\n        bottom: `calc(${trackPercent}% - ${thumbRect.height / 2}px)`,\n      },\n      horizontal: {\n        left: `calc(${trackPercent}% - ${thumbRect.width / 2}px)`,\n      },\n    }),\n  }\n\n  const rootStyle: CSSProperties = {\n    position: \"relative\",\n    touchAction: \"none\",\n    WebkitTapHighlightColor: \"rgba(0,0,0,0)\",\n    userSelect: \"none\",\n    outline: 0,\n    ...orient({\n      orientation,\n      vertical: {\n        paddingLeft: thumbRect.width / 2,\n        paddingRight: thumbRect.width / 2,\n      },\n      horizontal: {\n        paddingTop: thumbRect.height / 2,\n        paddingBottom: thumbRect.height / 2,\n      },\n    }),\n  }\n\n  const trackStyle: React.CSSProperties = {\n    position: \"absolute\",\n    ...orient({\n      orientation,\n      vertical: {\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        height: \"100%\",\n      },\n      horizontal: {\n        top: \"50%\",\n        transform: \"translateY(-50%)\",\n        width: \"100%\",\n      },\n    }),\n  }\n\n  const innerTrackStyle: React.CSSProperties = {\n    ...trackStyle,\n    ...orient({\n      orientation,\n      vertical: isReversed\n        ? { height: `${100 - trackPercent}%`, top: 0 }\n        : { height: `${trackPercent}%`, bottom: 0 },\n      horizontal: isReversed\n        ? { width: `${100 - trackPercent}%`, right: 0 }\n        : { width: `${trackPercent}%`, left: 0 },\n    }),\n  }\n\n  return { trackStyle, innerTrackStyle, rootStyle, thumbStyle }\n}\n"]},"metadata":{},"sourceType":"module"}