{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { BlockNumberContext } from './context';\nimport { blockNumberReducer } from './reducer';\nimport { useEthers, useDebounce } from '../../hooks';\nexport function BlockNumberProvider({\n  children\n}) {\n  const {\n    library,\n    chainId\n  } = useEthers();\n  const [state, dispatch] = useReducer(blockNumberReducer, {});\n  useEffect(() => {\n    if (library && chainId !== undefined) {\n      const update = blockNumber => dispatch({\n        chainId,\n        blockNumber\n      });\n\n      library.on('block', update);\n      return () => {\n        library.off('block', update);\n      };\n    }\n  }, [library, chainId]);\n  const debouncedState = useDebounce(state, 100);\n  const blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n  return _jsx(BlockNumberContext.Provider, {\n    value: blockNumber,\n    children: children\n  }, void 0);\n}","map":{"version":3,"sources":["../../../../../src/providers/blockNumber/provider.tsx"],"names":[],"mappings":";AAAA,SAAS,SAAT,EAAoB,UAApB,QAAiD,OAAjD;AACA,SAAS,kBAAT,QAAmC,WAAnC;AACA,SAAS,kBAAT,QAAmC,WAAnC;AACA,SAAS,SAAT,EAAoB,WAApB,QAAuC,aAAvC;AAMA,OAAM,SAAU,mBAAV,CAA8B;AAAE,EAAA;AAAF,CAA9B,EAAiD;AACrD,QAAM;AAAE,IAAA,OAAF;AAAW,IAAA;AAAX,MAAuB,SAAS,EAAtC;AACA,QAAM,CAAC,KAAD,EAAQ,QAAR,IAAoB,UAAU,CAAC,kBAAD,EAAqB,EAArB,CAApC;AAEA,EAAA,SAAS,CAAC,MAAK;AACb,QAAI,OAAO,IAAI,OAAO,KAAK,SAA3B,EAAsC;AACpC,YAAM,MAAM,GAAI,WAAD,IAAyB,QAAQ,CAAC;AAAE,QAAA,OAAF;AAAW,QAAA;AAAX,OAAD,CAAhD;;AACA,MAAA,OAAO,CAAC,EAAR,CAAW,OAAX,EAAoB,MAApB;AACA,aAAO,MAAK;AACV,QAAA,OAAO,CAAC,GAAR,CAAY,OAAZ,EAAqB,MAArB;AACD,OAFD;AAGD;AACF,GARQ,EAQN,CAAC,OAAD,EAAU,OAAV,CARM,CAAT;AAUA,QAAM,cAAc,GAAG,WAAW,CAAC,KAAD,EAAQ,GAAR,CAAlC;AACA,QAAM,WAAW,GAAG,OAAO,KAAK,SAAZ,GAAwB,cAAc,CAAC,OAAD,CAAtC,GAAkD,SAAtE;AAEA,SAAO,IAAA,CAAC,kBAAkB,CAAC,QAApB,EAA4B;AAAC,IAAA,KAAK,EAAE,WAAR;AAAqB,IAAA,QAAQ,EAAE;AAA/B,GAA5B,EAAmE,KAAA,CAAnE,CAAP;AACD","sourceRoot":"","sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useEffect, useReducer } from 'react';\nimport { BlockNumberContext } from './context';\nimport { blockNumberReducer } from './reducer';\nimport { useEthers, useDebounce } from '../../hooks';\nexport function BlockNumberProvider({ children }) {\n    const { library, chainId } = useEthers();\n    const [state, dispatch] = useReducer(blockNumberReducer, {});\n    useEffect(() => {\n        if (library && chainId !== undefined) {\n            const update = (blockNumber) => dispatch({ chainId, blockNumber });\n            library.on('block', update);\n            return () => {\n                library.off('block', update);\n            };\n        }\n    }, [library, chainId]);\n    const debouncedState = useDebounce(state, 100);\n    const blockNumber = chainId !== undefined ? debouncedState[chainId] : undefined;\n    return _jsx(BlockNumberContext.Provider, { value: blockNumber, children: children }, void 0);\n}\n//# sourceMappingURL=provider.js.map"]},"metadata":{},"sourceType":"module"}