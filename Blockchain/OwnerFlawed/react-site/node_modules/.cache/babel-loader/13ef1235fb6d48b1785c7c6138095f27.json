{"ast":null,"code":"import { switchAnatomy as parts } from \"@chakra-ui/anatomy\";\nimport { calc, cssVar, mode } from \"@chakra-ui/theme-tools\";\nvar $width = cssVar(\"switch-track-width\");\nvar $height = cssVar(\"switch-track-height\");\nvar $diff = cssVar(\"switch-track-diff\");\nvar diffValue = calc.subtract($width, $height);\nvar $translateX = cssVar(\"switch-thumb-x\");\n\nvar baseStyleTrack = props => {\n  var {\n    colorScheme: c\n  } = props;\n  return {\n    borderRadius: \"full\",\n    p: \"2px\",\n    width: [$width.reference],\n    height: [$height.reference],\n    transitionProperty: \"common\",\n    transitionDuration: \"fast\",\n    bg: mode(\"gray.300\", \"whiteAlpha.400\")(props),\n    _focus: {\n      boxShadow: \"outline\"\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\"\n    },\n    _checked: {\n      bg: mode(c + \".500\", c + \".200\")(props)\n    }\n  };\n};\n\nvar baseStyleThumb = {\n  bg: \"white\",\n  transitionProperty: \"transform\",\n  transitionDuration: \"normal\",\n  borderRadius: \"inherit\",\n  width: [$height.reference],\n  height: [$height.reference],\n  _checked: {\n    transform: \"translateX(\" + $translateX.reference + \")\"\n  }\n};\n\nvar baseStyle = props => ({\n  container: {\n    [$diff.variable]: diffValue,\n    [$translateX.variable]: $diff.reference,\n    _rtl: {\n      [$translateX.variable]: calc($diff).negate().toString()\n    }\n  },\n  track: baseStyleTrack(props),\n  thumb: baseStyleThumb\n});\n\nvar sizes = {\n  sm: {\n    container: {\n      [$width.variable]: \"1.375rem\",\n      [$height.variable]: \"0.75rem\"\n    }\n  },\n  md: {\n    container: {\n      [$width.variable]: \"1.875rem\",\n      [$height.variable]: \"1rem\"\n    }\n  },\n  lg: {\n    container: {\n      [$width.variable]: \"2.875rem\",\n      [$height.variable]: \"1.5rem\"\n    }\n  }\n};\nvar defaultProps = {\n  size: \"md\",\n  colorScheme: \"blue\"\n};\nexport default {\n  parts: parts.keys,\n  baseStyle,\n  sizes,\n  defaultProps\n};","map":{"version":3,"sources":["../../../src/components/switch.ts"],"names":["switchAnatomy","$width","cssVar","$height","$diff","diffValue","calc","$translateX","baseStyleTrack","props","colorScheme","c","borderRadius","p","width","height","transitionProperty","transitionDuration","bg","mode","_focus","boxShadow","_disabled","opacity","cursor","_checked","baseStyleThumb","transform","baseStyle","container","_rtl","track","thumb","sizes","sm","md","lg","defaultProps","size","parts"],"mappings":"AAAA,SAASA,aAAa,IAAtB,KAAA,QAAA,oBAAA;AAOA,SAAA,IAAA,EAAA,MAAA,EAAA,IAAA,QAAA,wBAAA;AAEA,IAAMC,MAAM,GAAGC,MAAM,CAArB,oBAAqB,CAArB;AACA,IAAMC,OAAO,GAAGD,MAAM,CAAtB,qBAAsB,CAAtB;AAEA,IAAME,KAAK,GAAGF,MAAM,CAApB,mBAAoB,CAApB;AACA,IAAMG,SAAS,GAAGC,IAAI,CAAJA,QAAAA,CAAAA,MAAAA,EAAlB,OAAkBA,CAAlB;AAEA,IAAMC,WAAW,GAAGL,MAAM,CAA1B,gBAA0B,CAA1B;;AAEA,IAAMM,cAAmC,GAAIC,KAAD,IAAW;AACrD,MAAM;AAAEC,IAAAA,WAAW,EAAEC;AAAf,MAAN,KAAA;AAEA,SAAO;AACLC,IAAAA,YAAY,EADP,MAAA;AAELC,IAAAA,CAAC,EAFI,KAAA;AAGLC,IAAAA,KAAK,EAAE,CAACb,MAAM,CAHT,SAGE,CAHF;AAILc,IAAAA,MAAM,EAAE,CAACZ,OAAO,CAJX,SAIG,CAJH;AAKLa,IAAAA,kBAAkB,EALb,QAAA;AAMLC,IAAAA,kBAAkB,EANb,MAAA;AAOLC,IAAAA,EAAE,EAAEC,IAAI,CAAA,UAAA,EAAJA,gBAAI,CAAJA,CAPC,KAODA,CAPC;AAQLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,SAAS,EAAE;AADL,KARH;AAWLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EADE,GAAA;AAETC,MAAAA,MAAM,EAAE;AAFC,KAXN;AAeLC,IAAAA,QAAQ,EAAE;AACRP,MAAAA,EAAE,EAAEC,IAAI,CAAIR,CAAJ,GAAA,MAAA,EAAgBA,CAAhB,GAAJQ,MAAI,CAAJA,CAAAA,KAAAA;AADI;AAfL,GAAP;AAHF,CAAA;;AAwBA,IAAMO,cAAiC,GAAG;AACxCR,EAAAA,EAAE,EADsC,OAAA;AAExCF,EAAAA,kBAAkB,EAFsB,WAAA;AAGxCC,EAAAA,kBAAkB,EAHsB,QAAA;AAIxCL,EAAAA,YAAY,EAJ4B,SAAA;AAKxCE,EAAAA,KAAK,EAAE,CAACX,OAAO,CALyB,SAKjC,CALiC;AAMxCY,EAAAA,MAAM,EAAE,CAACZ,OAAO,CANwB,SAMhC,CANgC;AAOxCsB,EAAAA,QAAQ,EAAE;AACRE,IAAAA,SAAS,EAAA,gBAAgBpB,WAAW,CAA3B,SAAA,GAAA;AADD;AAP8B,CAA1C;;AAYA,IAAMqB,SAA2C,GAAInB,KAAD,KAAY;AAC9DoB,EAAAA,SAAS,EAAE;AACT,KAACzB,KAAK,CAAN,QAAA,GADS,SAAA;AAET,KAACG,WAAW,CAAZ,QAAA,GAAwBH,KAAK,CAFpB,SAAA;AAGT0B,IAAAA,IAAI,EAAE;AACJ,OAACvB,WAAW,CAAZ,QAAA,GAAwBD,IAAI,CAAJA,KAAI,CAAJA,CAAAA,MAAAA,GAAAA,QAAAA;AADpB;AAHG,GADmD;AAQ9DyB,EAAAA,KAAK,EAAEvB,cAAc,CARyC,KAQzC,CARyC;AAS9DwB,EAAAA,KAAK,EAAEN;AATuD,CAAZ,CAApD;;AAYA,IAAMO,KAAqD,GAAG;AAC5DC,EAAAA,EAAE,EAAE;AACFL,IAAAA,SAAS,EAAE;AACT,OAAC5B,MAAM,CAAP,QAAA,GADS,UAAA;AAET,OAACE,OAAO,CAAR,QAAA,GAAoB;AAFX;AADT,GADwD;AAO5DgC,EAAAA,EAAE,EAAE;AACFN,IAAAA,SAAS,EAAE;AACT,OAAC5B,MAAM,CAAP,QAAA,GADS,UAAA;AAET,OAACE,OAAO,CAAR,QAAA,GAAoB;AAFX;AADT,GAPwD;AAa5DiC,EAAAA,EAAE,EAAE;AACFP,IAAAA,SAAS,EAAE;AACT,OAAC5B,MAAM,CAAP,QAAA,GADS,UAAA;AAET,OAACE,OAAO,CAAR,QAAA,GAAoB;AAFX;AADT;AAbwD,CAA9D;AAqBA,IAAMkC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EADe,IAAA;AAEnB5B,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe;AACb6B,EAAAA,KAAK,EAAEA,KAAK,CADC,IAAA;AAAA,EAAA,SAAA;AAAA,EAAA,KAAA;AAIbF,EAAAA;AAJa,CAAf","sourcesContent":["import { switchAnatomy as parts } from \"@chakra-ui/anatomy\"\nimport type {\n  PartsStyleFunction,\n  PartsStyleObject,\n  SystemStyleFunction,\n  SystemStyleObject,\n} from \"@chakra-ui/theme-tools\"\nimport { calc, cssVar, mode } from \"@chakra-ui/theme-tools\"\n\nconst $width = cssVar(\"switch-track-width\")\nconst $height = cssVar(\"switch-track-height\")\n\nconst $diff = cssVar(\"switch-track-diff\")\nconst diffValue = calc.subtract($width, $height)\n\nconst $translateX = cssVar(\"switch-thumb-x\")\n\nconst baseStyleTrack: SystemStyleFunction = (props) => {\n  const { colorScheme: c } = props\n\n  return {\n    borderRadius: \"full\",\n    p: \"2px\",\n    width: [$width.reference],\n    height: [$height.reference],\n    transitionProperty: \"common\",\n    transitionDuration: \"fast\",\n    bg: mode(\"gray.300\", \"whiteAlpha.400\")(props),\n    _focus: {\n      boxShadow: \"outline\",\n    },\n    _disabled: {\n      opacity: 0.4,\n      cursor: \"not-allowed\",\n    },\n    _checked: {\n      bg: mode(`${c}.500`, `${c}.200`)(props),\n    },\n  }\n}\n\nconst baseStyleThumb: SystemStyleObject = {\n  bg: \"white\",\n  transitionProperty: \"transform\",\n  transitionDuration: \"normal\",\n  borderRadius: \"inherit\",\n  width: [$height.reference],\n  height: [$height.reference],\n  _checked: {\n    transform: `translateX(${$translateX.reference})`,\n  },\n}\n\nconst baseStyle: PartsStyleFunction<typeof parts> = (props) => ({\n  container: {\n    [$diff.variable]: diffValue,\n    [$translateX.variable]: $diff.reference,\n    _rtl: {\n      [$translateX.variable]: calc($diff).negate().toString(),\n    },\n  },\n  track: baseStyleTrack(props),\n  thumb: baseStyleThumb,\n})\n\nconst sizes: Record<string, PartsStyleObject<typeof parts>> = {\n  sm: {\n    container: {\n      [$width.variable]: \"1.375rem\",\n      [$height.variable]: \"0.75rem\",\n    },\n  },\n  md: {\n    container: {\n      [$width.variable]: \"1.875rem\",\n      [$height.variable]: \"1rem\",\n    },\n  },\n  lg: {\n    container: {\n      [$width.variable]: \"2.875rem\",\n      [$height.variable]: \"1.5rem\",\n    },\n  },\n}\n\nconst defaultProps = {\n  size: \"md\",\n  colorScheme: \"blue\",\n}\n\nexport default {\n  parts: parts.keys,\n  baseStyle,\n  sizes,\n  defaultProps,\n}\n"]},"metadata":{},"sourceType":"module"}